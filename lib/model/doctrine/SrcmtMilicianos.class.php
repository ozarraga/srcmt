<?php

/**
 * SrcmtMilicianos
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    srcmt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class SrcmtMilicianos extends BaseSrcmtMilicianos {

    public static function getTitulosCampos() {
        $titulosCampos = array(
            'Codigo Miliciano',
            'Nacionalidad',
            'C&eacute;dula de Identidad',
            'Primer Apellido',
            'Segundo Apellido',
            'Primer Nombre',
            'Segundo Nombre',
            'Sexo',
            'Fecha de Nacimiento',
            'Estado Civil',
            'Grupo Sangu&iacute;neo',
            'Estado',
            'Municipio',
            'Parroquia',
            'Ciudad',
            'Direcci&oacute;n',
            'Tel&eacute;fono Local',
            'M&oacute;vil',
            'Correo Electr&oacute;nico',
            'Direcci&oacute;n de Emergencia',
            'Tel&eacute;fono Emergencia',
            'Grado de Instrucci&oacute;n',
            'Especialidad',
            'Idiomas',
            'Nivel de Dominio de Idioma',
            'Programa de Formaci&oacute;n de Grado',
            'Trayecto',
            'Tramo',
            'Aldea',
            'Sede',
            'Profesi&oacute;n',
            'Oficio',
            'Trabaja si/no',
            'Empresa',
            'Direcci&oacute;n de Trabajo/Oficina',
            'Tel&eacute;fono de Trabajo/Oficina',
            'Pos&eacute;e Veh&iacute;culo',
            'Tipo de Veh&iacute;culo',
            'Modelo de Veh&iacute;culo',
            'Numero de Placa',
            'Posee Licencia',
            'Grado Licencia',
            'Porte de Armas',
            'Numero de Porte',
            'Tipo de Armamento',
            'Calibre Armamento',
            'Signos Particulares',
            'Uniforme Talla',
            'Calzado Talla',
            'Estatura',
            'Peso en Kg.',
            'Color Cabello',
            'Color Piel',
            'Discapacidad',
            'Alergias',
            'Dominio de Mano',
            'Practica Deporte',
            'Deporte',
            'Participa Actividad Cultural',
            'Actividad(es) Cultural(es)',
            'Agrupacion(es) Social(es)',
            'Misiones',
            'Cooperativas',
            'Apellidos Beneficiario',
            'Nombres Beneficiario',
            'Cedula Beneficiario',
            'Tel&eacute;fono Beneficiario',
            'Fecha de Creaci&oacute;n',
            'Fecha de Actualizaci&oacute;n');


        return $titulosCampos;
    }

    public static function getArregloTitulosCampos() {
        $titulosCampos = array(
            'C&oacute;digo Miliciano' => 'codigo_miliciano',
            'Nacionalidad' => 'nacionalidad',
            'C&eacute;dula de Identidad' => 'cedula_identidad',
            'Primer Apellido' => 'primer_apellido',
            'Segundo Apellido' => 'segundo_apellido',
            'Primer Nombre' => 'primer_nombre',
            'Segundo Nombre' => 'segundo_nombre',
            'Sexo' => 'sexo',
            'Fecha de Nacimiento' => 'fecha_nacimiento',
            'Estado Civil' => 'estado_civil',
            'Grupo Sangu&iacute;neo' => 'grupo_sanguineo',
            'Estado' => 'codigo_estado',
            'Municipio' => 'codigo_municipio',
            'Parroquia' => 'codigo_parroquia',
            'Ciudad' => 'codigo_ciudad',
            'Direcci&oacute;n' => 'direccion',
            'Tel&eacute;fono Local' => 'telefono_local',
            'Movil' => 'movil',
            'Correo Electr&oacute;nico' => 'correo_electronico',
            'Direcci&oacute;n de Emergencia' => 'direccion_emergencia',
            'Tel&eacute;fono Emergencia' => 'telefono_emergencia',
            'Grado de Instrucci&oacute;n' => 'grado_instruccion',
            'Especialidad' => 'especialidad',
            'Idiomas' => 'idiomas',
            'Nivel de Dominio de Idioma' => 'nivel_dominio_idioma',
            'Programa de Formaci&oacute;n de Grado' => 'programa_formacion_grado',
            'Trayecto' => 'trayecto',
            'Tramo' => 'tramo',
            'Aldea' => 'aldea',
            'Sede' => 'sedes',
            'Profesi&oacute;n' => 'profesion',
            'Oficio' => 'oficio',
            'Trabaja si/no' => 'trabaja_si_no',
            'Empresa' => 'empresa',
            'Direcci&oacute;n de Trabajo/Oficina' => 'direccion_oficina',
            'Tel&eacute;fono de Trabajo/Oficina' => 'telefono_oficina',
            'Pos&eacute;e Veh&iacute;culo' => 'posee_vehiculo',
            'Tipo de Veh&iacute;culo' => 'tipo_vehiculo',
            'Modelo de Veh&iacute;culo' => 'modelo_vehiculo',
            'Numero de Placa' => 'numero_placa',
            'Posee Licencia' => 'posee_licencia',
            'Grado Licencia' => 'grado_licencia',
            'Porte de Armas' => 'porte_armas',
            'Numero de Porte' => 'numero_porte_armas',
            'Tipo de Armamento' => 'tipo_armamento',
            'Calibre Armamento' => 'calibre_armamento',
            'Signos Particulares' => 'signos_particulares',
            'Uniforme Talla' => 'talla_uniforme',
            'Calzado Talla' => 'talla_calzado',
            'Estatura' => 'estatura',
            'Peso en Kg.' => 'peso',
            'Color Cabello' => 'color_cabello',
            'Color Piel' => 'color_piel',
            'Discapacidad' => 'discapacidad',
            'Alergias' => 'alergias',
            'Dominio de Mano' => 'dominio_mano',
            'Practica Deporte' => 'practica_deporte',
            'Deporte' => 'deporte',
            'Participa Actividad Cultural' => 'participa_actividad_cultural',
            'Actividad(es) Cultural(es)' => 'actividad_cultural',
            'Agrupacion(es) Social(es)' => 'agrupacion_social',
            'Misiones' => 'misiones',
            'Cooperativas' => 'cooperativas',
            'Apellidos Beneficiario' => 'apellidos_beneficiario',
            'Nombres Beneficiario' => 'nombres_beneficiario',
            'Cedula Beneficiario' => 'cedula_beneficiario',
            'Tel&eacute;fono Beneficiario' => 'telefono_beneficiario',
            'Fecha de Creaci&oacute;n' => 'created_at',
            'Fecha de Actualizaci&oacute;n' => 'updated_at');


        return $titulosCampos;
    }

    public function getCedulaIdentidadFormateada() {
        return number_format($this->getCedulaIdentidad(), 0, ',', '.');
    }

    public static function getSelectTitulosCampos() {
        $titulos_y_campos = self::getArregloTitulosCampos();

        $ArrayExcepcion = Array(
            'C&oacute;digo Miliciano' => 'codigo_miliciano',
            'C&eacute;dula de Identidad' => 'cedula_identidad',
            'Primer Apellido' => 'primer_apellido',
            'Segundo Apellido' => 'segundo_apellido',
            'Primer Nombre' => 'primer_nombre',
            'Segundo Nombre' => 'segundo_nombre',
            'Direcci&oacute;n' => 'direccion',
            'Tel&eacute;fono Local' => 'telefono_local',
            'Movil' => 'movil',
            'Correo Electr&oacute;nico' => 'correo_electronico',
            'Direcci&oacute;n de Emergencia' => 'direccion_emergencia',
            'Tel&eacute;fono Emergencia' => 'telefono_emergencia',
            'Especialidad' => 'especialidad',
            'Idiomas' => 'idiomas',
            'Nivel de Dominio de Idioma' => 'nivel_dominio_idioma',
            'Aldea' => 'aldea',
            'Profesi&oacute;n' => 'profesion',
            'Oficio' => 'oficio',
            'Empresa' => 'empresa',
            'Direcci&oacute;n de Trabajo/Oficina' => 'direccion_oficina',
            'Tel&eacute;fono de Trabajo/Oficina' => 'telefono_oficina',
            'Tipo de Veh&iacute;culo' => 'tipo_vehiculo',
            'Modelo de Veh&iacute;culo' => 'modelo_vehiculo',
            'Numero de Placa' => 'numero_placa',
            'Grado Licencia' => 'grado_licencia',
            'Numero de Porte' => 'numero_porte_armas',
            'Tipo de Armamento' => 'tipo_armamento',
            'Calibre Armamento' => 'calibre_armamento',
            'Signos Particulares' => 'signos_particulares',
            'Calzado Talla' => 'talla_calzado',
            'Estatura' => 'estatura',
            'Peso en Kg.' => 'peso',
            'Color Cabello' => 'color_cabello',
            'Color Piel' => 'color_piel',
            'Discapacidad' => 'discapacidad',
            'Alergias' => 'alergias',
            'Deporte' => 'deporte',
            'Actividad(es) Cultural(es)' => 'actividad_cultural',
            'Agrupacion(es) Social(es)' => 'agrupacion_social',
            'Misiones' => 'misiones',
            'Cooperativas' => 'cooperativas',
            'Apellidos Beneficiario' => 'apellidos_beneficiario',
            'Nombres Beneficiario' => 'nombres_beneficiario',
            'Cedula Beneficiario' => 'cedula_beneficiario',
            'Tel&eacute;fono Beneficiario' => 'telefono_beneficiario',
            'Fecha de Creaci&oacute;n' => 'created_at',
            'Fecha de Actualizaci&oacute;n' => 'updated_at'
        );

        $tempTitulos_y_campos = array_diff($titulos_y_campos, $ArrayExcepcion);
        return $tempTitulos_y_campos;
    }

    public function getEstado() {
        $Estado = Doctrine::getTable('SrcmtEstado')
                ->createQuery('a')
                ->where('a.codigo_estado=?', array($this->getCodigoEstado()))
                ->limit(1)
                ->execute();
        if ($Estado->count() <= 0) {
            $nombreEstado = '';
        } else {
            $nombreEstado = $Estado->getFirst()->getEstado();
        }

        return $nombreEstado;
    }

    public function getMunicipio() {
        $Municipio = Doctrine::getTable('SrcmtMunicipio')
                ->createQuery('a')
                ->where('a.codigo_estado=?', array(parent::getCodigoEstado()))
                ->andWhere('a.codigo_municipio=?', array(parent::getCodigoMunicipio()))
                ->limit(1)
                ->execute();

        if ($Municipio->count() <= 0) {
            $nombreMunicipio = '';
        } else {
            $nombreMunicipio = $Municipio->getFirst()->getMunicipio();
        }
        return $nombreMunicipio;
    }

    public function getParroquia() {
        $Parroquia = Doctrine::getTable('SrcmtParroquia')
                ->createQuery('a')
                ->where('a.codigo_estado=?', array(parent::getCodigoEstado()))
                ->andWhere('a.codigo_municipio=?', array(parent::getCodigoMunicipio()))
                ->andWhere('a.codigo_parroquia=?', array(parent::getCodigoParroquia()))
                ->limit(1)
                ->execute();
        if ($Parroquia->count() <= 0) {
            $nombreParroquia = '';
        } else {
            $nombreParroquia = $Parroquia->getFirst()->getParroquia();
        }
        return $nombreParroquia;
    }

    public function getCiudad() {
        $Ciudad = Doctrine::getTable('SrcmtCiudad')
                ->createQuery('a')
                ->where('a.codigo_estado=?', array(parent::getCodigoEstado()))
                ->andWhere('a.codigo_municipio=?', array(parent::getCodigoMunicipio()))
                ->andWhere('a.codigo_Ciudad=?', array(parent::getCodigoCiudad()))
                ->limit(1)
                ->execute();

        if ($Ciudad->count() <= 0) {
            $nombreCiudad = '';
        } else {
            $nombreCiudad = $Ciudad->getFirst()->getCiudad();
        }
        return $nombreCiudad;
    }

    public function __toString() {
        return parent::getNacionalidad() . '-' .
                parent::getCedulaIdentidad() . ' ' .
                parent::getPrimerApellido() . ' ' .
                parent::getPrimerNombre()
        ;
    }

    public function getPorteArmasFormateado() {

        $Valor = '';
        $eval = $this->getPorteArmas();
        if ($eval == true) {
            $Valor = 'S&iacute;';
        } elseif ($eval == false) {
            $Valor = 'No';
        }

        return $Valor;
    }

    public function getPoseeLicenciaFormateado() {

        $Valor = '';
        $eval = $this->getPoseeLicencia();
        if ($eval == true) {
            $Valor = 'S&iacute;';
        } elseif ($eval == false) {
            $Valor = 'No';
        }

        return $Valor;
    }

    public function getPoseeVehiculoFormateado() {

        $Valor = '';
        $eval = $this->getPoseeVehiculo();
        if ($eval == true) {
            $Valor = 'S&iacute;';
        } elseif ($eval == false) {
            $Valor = 'No';
        }

        return $Valor;
    }

    public function getPracticaDeporteFormateado() {

        $Valor = '';
        $eval = $this->getPracticaDeporte();
        if ($eval == true) {
            $Valor = 'S&iacute;';
        } elseif ($eval == false) {
            $Valor = 'No';
        }

        return $Valor;
    }

    public function getTrabajaSiNoFormateado() {

        $Valor = '';
        $eval = $this->getTrabajaSiNo();
        if ($eval == true) {
            $Valor = 'S&iacute;';
        } elseif ($eval == false) {
            $Valor = 'No';
        }

        return $Valor;
    }

    public function getParticipaActividadCulturalFormateado() {

        $Valor = '';
        $eval = $this->getParticipaActividadCultural();
        if ($eval == true) {
            $Valor = 'S&iacute;';
        } elseif ($eval == false) {
            $Valor = 'No';
        }

        return $Valor;
    }

    public function getFechaNacimientoFormateado() {
        return $this->getDateTimeObject('fecha_nacimiento')->format('d-m-Y');
    }

    public function getCreatedAtFormateado() {
        return $this->getDateTimeObject('created_at')->format('d-m-Y H:i');
    }

    public function getUpdatedAtFormateado() {
        return $this->getDateTimeObject('updated_at')->format('d-m-Y H:i');
    }

    public function getSlug() {
        return Srcmt::slugify($this->__toString());
    }

}

